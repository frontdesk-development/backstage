app:
  title: Frontdesk
  baseUrl: http://frontdesk.trivago.cloud
  googleAnalyticsTrackingId: UA-82157708-30

backend:
  baseUrl: http://frontdesk.trivago.cloud
  listen:
    port: 7000
  cors:
    origin: http://frontdesk.trivago.cloud
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  database:
    client: pg
    connection:
      database:
        $secret:
          env: PGDATABASE
      user:
        $secret:
          env: PGUSER
      password:
        $secret:
          env: PGPASSWORD
      host:
        $secret:
          env: PGHOST
  csp:
    connect-src: ["'self'", 'http:', 'https:']

proxy:
  '/circleci/api':
    target: https://circleci.com/api/v1.1
    headers:
      Circle-Token:
        $env: CIRCLECI_AUTH_TOKEN

  '/jenkins/api':
    target: 'http://localhost:8080'
    headers:
      Authorization:
        $env: JENKINS_BASIC_AUTH_HEADER

  '/jira/api':
    target: https://tasks.trivago.com
    headers:
      Authorization:
        $env: JIRA_TOKEN
      Accept: 'application/json'
      Content-Type: 'application/json'
      X-Atlassian-Token: 'no-check'
      User-Agent: "MY-UA-STRING"

  '/bridge/api':
    target: https://trivago.bridgeapp.com/api
    headers:
      Authorization:
        $env: BRIDGE_TOKEN

jira:
  apiVersion: 2

bridge:
  url: https://trivago.bridgeapp.com

gcpProjects:
  owner: trivago 
  repo: gcp-shared-config

organization:
  name: trivago

techdocs:
  storageUrl: http://frontdesk.trivago.cloud/api/techdocs/static/docs
  requestUrl: http://frontdesk.trivago.cloud/api/techdocs
  builder: 'local' 
  generators:
    techdocs: 'local'
  publisher:
    type: 'local'

sentry:
  organization: trivago

rollbar:
  organization: trivago
  accountToken:
    $secret:
      env: ROLLBAR_ACCOUNT_TOKEN

newrelic:
  api:
    baseUrl: 'https://api.newrelic.com/v2'
    key: NEW_RELIC_REST_API_KEY

auth:
  providers:
    google:
      development:
        appOrigin: http://frontdesk.trivago.cloud
        secure: false
        clientId:
          $secret:
            env: AUTH_GOOGLE_CLIENT_ID
        clientSecret:
          $secret:
            env: AUTH_GOOGLE_CLIENT_SECRET
    github:
      development:
        appOrigin: http://frontdesk.trivago.cloud
        secure: false
        clientId:
          $secret:
            env: AUTH_GITHUB_CLIENT_ID
        clientSecret:
          $secret:
            env: AUTH_GITHUB_CLIENT_SECRET
        enterpriseInstanceUrl:
          $secret:
            env: AUTH_GITHUB_ENTERPRISE_INSTANCE_URL

catalog:
  rules:
    - allow: [Component, API, Group, User, Template, Location]
  locations:
    # Backstage Example Templates
    - type: url
      target: https://github.com/spotify/backstage/blob/master/plugins/scaffolder-backend/sample-templates/react-ssr-template/template.yaml
    - type: url
      target: https://github.com/spotify/backstage/blob/master/plugins/scaffolder-backend/sample-templates/springboot-grpc-template/template.yaml
    - type: url
      target: https://github.com/spotify/backstage/blob/master/plugins/scaffolder-backend/sample-templates/create-react-app/template.yaml
    - type: url
      target: https://github.com/spotify/cookiecutter-golang/blob/master/template.yaml
    - type: url
      target: https://github.com/frontdesk-development/cookiecutter-argocd/blob/master/template.yaml
    - type: url
      target: https://github.com/trivago/cookiecutter-terraform/blob/master/template.yaml

integrations:
  github:
    - host: github.com
      token:
        $env: GITHUB_TOKEN
  githubOrg:
    - host: https://github.com
      token:
        $env: GITHUB_TOKEN

lighthouse:
  baseUrl: http://frontdesk.trivago.cloud/lighthouse-be

grafana:
  baseUrl: http://monitoring.trivago.trv

scaffolder:
  github:
    token:
      $secret:
        env: GITHUB_ACCESS_TOKEN
    visibility: internal # or 'public' or 'private'

kubernetes:
  serviceLocatorMethod: 'multiTenant'
  clusterLocatorMethods:
    - 'config'
  clusters: []

homepage:
  clocks:
    - label: UTC
      timezone: UTC
    - label: DUS
      timezone: 'Europe/Berlin'

costInsights:
  engineerCost: 200000
  products:
    computeEngine:
      name: Compute Engine
      icon: compute
  metrics:
  gcpConfig:
    projectId: 'trv-shared-billing'
    keyFilename: '/etc/trv-shared-admin/trv-shared-admin'
    billingTable:
      $env: BILLING_TABLE
